const Mockdata =require("./mock/index.js");

let newlist=[] 
module.exports=(app)=>{
    //渲染接口
    app.post("/api/list",(req,res)=>{
        res.send({
            code:200,
            data:Mockdata.data
        })
    })

    app.get("/api/search",(req,res)=>{
        const {value} = req.query;
        console.log(value);
        res.send({
            code:200,
            data:Mockdata.data.filter(item=>item.title.includes(value))
        })
    })

    //删除
    app.get("/api/del",(req,res)=>{
        const {id} = req.query;
        console.log(id);
        res.send({
            code:200,
            data:Mockdata.data=Mockdata.data.filter( item=>item.id != id)
        })
    })

    //复选框
    app.get("/api/check",(req,res)=>{
        const {id} = req.query;
        console.log(id);
        res.send({
            code:200,
            data:Mockdata.data.map((item)=>{
                if(item.id === id){
                   if(!item.bollean){
                       item.bollean = true
                   }else{
                       item.bollean = false
                   }
                }
                return item;
            })
        })
    })


    //全选反选
    app.get("/api/checked",((req,res)=>{
        let {box} = req.query;
        //此时传过来的是 字符串类型 要把它转成bollean 类型
        let box1  =  eval(box.toLowerCase());
        res.send({
            code:200,
            data: box1 ? Mockdata.data.map((item,index)=>{
                item.bollean = box1;
                return item;
            }): Mockdata.data.map((item,index)=>{
                item.bollean = box1;
                return item;
            })
        })
    }))



    //跳转详情
    app.get("/api/detail",(req,res)=>{
        const {id} = req.query;
        res.send({
            code:200,
            data:Mockdata.data.find((item,index)=>{
                return item.id === id;
            })
        })
    })

    //添加购物车
    app.get("/api/carlist",(req,res)=>{
        const {id} = req.query;
        console.log(id);
       
        newlist.push(Mockdata.data.find((item)=>item.id === id)) 
        res.send({
            code:200,
            data:newlist
        })
    })
}