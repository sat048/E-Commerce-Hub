import React, { useRef, useCallback, useEffect } from 'react'

// 防抖函数
function useDebounce(fn, delay, setInputValue) {
    const { current } = useRef({ fn, timer: null }); //curent上挂载了fn和timer

    useEffect(function () {
        current.fn = fn;
    }, [fn]);

    return useCallback((...args) => {
        setInputValue(args[0].target.value)  //修改值
        if (current.timer) { //判断timer
            clearTimeout(current.timer);  //如果有,清除
        }
        current.timer = setTimeout(() => {
            current.fn(...args);
        }, delay);
    })
}

export default useDebounce